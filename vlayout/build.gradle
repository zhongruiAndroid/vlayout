apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:design:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

/*


apply plugin: 'com.android.library'

buildscript {
    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "http://oss.jfrog.org/oss-snapshot-local/" }
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
    }
}

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url "http://oss.jfrog.org/oss-snapshot-local/" }
    jcenter()
    mavenLocal()
}


ext {
    bintrayRepo = 'Tangram'
    bintrayName = 'vlayout'

    publishedGroupId = project.hasProperty('GROUP') ? GROUP : ''
    libraryName = project.hasProperty('ARTIFACT') ? ARTIFACT : ''
    artifact = project.hasProperty('ARTIFACT') ? ARTIFACT : ''

    libraryDescription = 'Project vlayout is a powerfull LayoutManager extension for RecyclerView, it provides a group of layouts for RecyclerView. Make it able to handle a complicate situation when grid, list and other layouts in the same recyclerview.'

    siteUrl = 'https://github.com/alibaba/vlayout'
    gitUrl = 'https://github.com/alibaba/vlayout.git'

    libraryVersion = project.hasProperty('VERSION_NAME') ? VERSION_NAME : ''

    developerId = 'longerian'
    developerName = 'longerian'
    developerEmail = 'xlhongultimate@gmail.com'

    licenseName = 'MIT'
    licenseUrl = 'https://opensource.org/licenses/MIT'
    allLicenses = ["MIT"]
}

def VERSION = System.properties['version'] ?: '10'
def VERSION_NAME = System.properties['versionName'] ?: '0.1.0'

android {
    compileSdkVersion Integer.parseInt(System.properties['compileSdkVersion'] ?: '22')
    buildToolsVersion System.properties['buildToolsVersion']

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion Integer.parseInt(System.properties['targetSdkVersion'] ?: '14')
        versionCode Integer.parseInt(VERSION ?: '10')
        versionName VERSION_NAME
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // compile project(':extension')
    if (project.hasProperty('useNewSupportLibrary')) {
        compile 'com.android.support:recyclerview-v7:25.2.0@aar'
        compile('com.android.support:support-v4:25.2.0@aar')
        compile 'com.android.support:support-annotations:25.2.0'
        compile 'com.android.support:support-compat:25.2.0'
        compile 'com.android.support:support-core-ui:25.2.0'
    } else {
        compile 'com.android.support:recyclerview-v7:23.1.1@aar'
        compile('com.android.support:support-v4:23.1.1@aar') {
            exclude group: 'com.android.support', module: 'support-annotations'
        }
        compile 'com.android.support:support-annotations:23.1.1'
    }

    androidTestCompile "org.robolectric:robolectric:3.0"
}


File deployConfig = rootProject.file('deploy.gradle')
if (deployConfig.exists()) {
    apply from: rootProject.file('deploy.gradle')
}

deployConfig = rootProject.file('jcenterInstall.gradle')
if (deployConfig.exists()) {
    apply from: rootProject.file('jcenterInstall.gradle')
}

deployConfig = rootProject.file('jcenterDeploy.gradle')
if (deployConfig.exists()) {
    apply from: rootProject.file('jcenterDeploy.gradle')
}*/
